rule Example_Malware_IOCs
{
  meta:
    author = "AI Assistant"
    date = "2025-07-23"
    description = "Detects a hypothetical malware based on specific IOCs"
    version = "1.0"
    
  strings:
    // File Paths
    $filepath1 = "C:\\ProgramData\\MalwareService\\malware.exe" ascii wide nocase
    $filepath2 = "%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\evil_loader.lnk" ascii wide nocase
    
    // Registry Keys
    $regkey1 = "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\MaliciousApp" ascii wide nocase
    $regkey2 = "HKLM\\SYSTEM\\CurrentControlSet\\Services\\BadService" ascii wide nocase
    
    // Mutexes
    $mutex1 = "Global\\{7F9A2B4C-1D8E-4F03-9C6B-5A1D8F2E0C4B}" ascii wide
    
    // Network Indicators (example IPs and domains)
    $ip_c2 = "192.168.1.100" ascii wide
    $domain_phishing = "bad-phishing-site.com" ascii wide
    
    // File Hashes (example MD5, SHA1, SHA256 - often used in external IOC feeds)
    // Note: YARA isn't ideal for direct hash matching on large files, but can be used for small embedded hashes.
    // For large file integrity, external tools often compare hashes generated by YARA's `hash.md5` or `hash.sha256` modules.
    $hash_md5 = "e4d7f1c3a9b6e8d5c2a1f0b3e4d7f1c3" ascii wide // Example MD5 for a specific file
    
  condition:
    // At least 3 of the file path, registry key, or mutex strings must be present.
    // OR if any of the network indicators or a specific hash is found.
    ( #filepath1 + #filepath2 + #regkey1 + #regkey2 + #mutex1 >= 3 ) or
    $ip_c2 or $domain_phishing or $hash_md5
}
